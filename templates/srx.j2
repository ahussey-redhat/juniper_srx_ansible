{# configure global settings #}
delete
set system root-authentication encrypted-password {{ junos_password | password_hash('md5', 'juniper') }}
set system host-name {{ host_name }}
set system domain-name {{ domain_name }}
set system time-zone Australia/Sydney
{% for name_server in system_name_servers %}
set system name-server {{ name_server }}
{% endfor %}
set system ntp server 203.57.51.100 prefer routing-instance lan-trusted
set system license autoupdate url https://ae1.juniper.net/junos/key_retrieval

{# configure services #}
set system services web-management http interface {{ webinterface }}
set system services web-management https interface {{ webinterface }}
set system services web-management https system-generated-certificate

{# configure redundant ethernet #}
set chassis cluster reth-count 3
{# LAN reth #}
set chassis cluster redundancy-group 1 node 0 priority 1
set chassis cluster redundancy-group 1 node 1 priority 1
set chassis cluster redundancy-group 1 gratuitous-arp-count 4
set interfaces reth0 redundant-ether-options redundancy-group 1
set interfaces reth0 redundant-ether-options lacp active
set interfaces reth0 redundant-ether-options lacp periodic slow
set interfaces reth0 flexible-vlan-tagging
set interfaces reth0 native-vlan-id 1
{# WAN reth #}
{# Primary WAN #}
set chassis cluster redundancy-group 2 node 0 priority 1
set chassis cluster redundancy-group 2 node 1 priority 1
set chassis cluster redundancy-group 2 gratuitous-arp-count 4
set interfaces reth1 redundant-ether-options redundancy-group 2
{# Alternate WAN #}
set chassis cluster redundancy-group 3 node 0 priority 1
set chassis cluster redundancy-group 3 node 1 priority 1
set chassis cluster redundancy-group 3 gratuitous-arp-count 4
set interfaces reth2 redundant-ether-options redundancy-group 3

{% for interface in fabric_interfaces %}
set interfaces fab{{ interface.fab_number}} fabric-options member-interfaces {{ interface.interface }}
{% endfor %}

{% for interface in switch_fabric_interfaces %}
set interfaces swfab{{ interface.fab_number}} fabric-options member-interfaces {{ interface.interface }}
{% endfor %}

set protocols l2-learning global-mode transparent-bridge
set protocols l2-learning global-mac-table-aging-time 120
set protocols lldp interface all
set protocols lldp-med interface all
set protocols rstp interface all

{# configure physical interfaces #}
{% for interface in physical_interfaces %}
{# configure redundant ethernet #}
set interfaces {{ interface.if }} gigether-options redundant-parent reth0
{% endfor %}

{# configure LAN security zone #}
{% for zone in security_zones %}
set security policies global policy {{ zone.name }}-to-{{ zone.name }} match from-zone {{ zone.name }} to-zone {{ zone.name }} source-address any
set security policies global policy {{ zone.name }}-to-{{ zone.name }} match from-zone {{ zone.name }} to-zone {{ zone.name }} destination-address any
set security policies global policy {{ zone.name }}-to-{{ zone.name }} match from-zone {{ zone.name }} to-zone {{ zone.name }} application any
{#set security policies global {{ zone.name }}-to-{{ zone.name }} match from-zone {{ zone.name }} to-zone {{ zone.name }} match dynamic-application any #}
set security policies global policy {{ zone.name }}-to-{{ zone.name }} then permit
{% for protocol in zone.allowed_protocols %}
set security zones security-zone {{ zone.name }} host-inbound-traffic system-services {{ protocol }}
set security zones security-zone {{ zone.name }} host-inbound-traffic protocols {{ protocol }}
{% endfor %}

set interfaces reth0 promiscuous-mode
{% for subnet in subnets %}
{% if zone.name in subnet.security_zones %}
set security zones security-zone {{ zone.name }} interfaces reth0.{{ subnet.vlan.id }}
set interfaces reth0 unit {{ subnet.vlan.id }} family inet address {{ subnet.gateway }}/{{ subnet.mask }}
set interfaces reth0 unit {{ subnet.vlan.id }} vlan-id {{ subnet.vlan.id }}
set interfaces reth0 unit {{ subnet.vlan.id }} description {{ subnet.vlan.tag }}
{% for protocol in zone.allowed_protocols %}
set security zones security-zone {{ zone.name }} interfaces reth0.{{ subnet.vlan.id }} host-inbound-traffic system-services {{ protocol }}
set security zones security-zone {{ zone.name }} interfaces reth0.{{ subnet.vlan.id }} host-inbound-traffic protocols {{ protocol }}
{% endfor %}
{% endif %}
{% endfor %}
{% endfor %}

{# LAN to WAN security policies #}
set security policies global policy lan-trusted-to-primary-untrusted match from-zone lan-trusted to-zone primary-untrusted source-address any
set security policies global policy lan-trusted-to-primary-untrusted match from-zone lan-trusted to-zone primary-untrusted destination-address any
set security policies global policy lan-trusted-to-primary-untrusted match from-zone lan-trusted to-zone primary-untrusted application any
{#set security policies global from-zone lan-trusted to-zone primary-untrusted policy lan-trusted-to-primary-untrusted match dynamic-application any#}
set security policies global policy lan-trusted-to-primary-untrusted then permit

set security policies global policy primary-untrusted-to-lan-trusted match from-zone primary-untrusted to-zone lan-trusted source-address any
set security policies global policy primary-untrusted-to-lan-trusted match from-zone primary-untrusted to-zone lan-trusted destination-address any
set security policies global policy primary-untrusted-to-lan-trusted match from-zone primary-untrusted to-zone lan-trusted application any
{#set security policies global from-zone primary-untrusted to-zone lan-trusted policy primary-untrusted-to-lan-trusted match dynamic-application any#}
set security policies global policy primary-untrusted-to-lan-trusted then permit

set security policies global policy lan-trusted-to-alternate-untrusted match from-zone lan-trusted to-zone alternate-untrusted source-address any
set security policies global policy lan-trusted-to-alternate-untrusted match from-zone lan-trusted to-zone alternate-untrusted destination-address any
set security policies global policy lan-trusted-to-alternate-untrusted match from-zone lan-trusted to-zone alternate-untrusted application any
{#set security policies global from-zone lan-trusted to-zone alternate-untrusted policy lan-trusted-to-alternate-untrusted match dynamic-application any#}
set security policies global policy lan-trusted-to-alternate-untrusted then permit

set security policies global policy alternate-untrusted-to-lan-trusted match from-zone alternate-untrusted to-zone lan-trusted source-address any
set security policies global policy alternate-untrusted-to-lan-trusted match from-zone alternate-untrusted to-zone lan-trusted destination-address any
set security policies global policy alternate-untrusted-to-lan-trusted match from-zone alternate-untrusted to-zone lan-trusted application any
{#set security policies global from-zone alternate-untrusted to-zone lan-trusted policy alternate-untrusted-to-lan-trusted match dynamic-application any#}
set security policies global policy alternate-untrusted-to-lan-trusted then permit

{# configure virtual-routers for each subnet #}
{% for subnet in subnets %}
{% for router in virtual_routers %}
{% if router in subnet.virtual_router%}
{# configure DHCP for each subnet #}
set routing-instances {{ router }} access address-assignment pool {{ subnet.name }} family inet network {{ subnet.gateway }}/{{ subnet.mask }}
set routing-instances {{ router }} access address-assignment pool {{ subnet.name }} family inet range {{ subnet.name }}-scope low {{ subnet.dhcp_start }}
set routing-instances {{ router }} access address-assignment pool {{ subnet.name }} family inet range {{ subnet.name }}-scope high {{ subnet.dhcp_end }}
set routing-instances {{ router }} access address-assignment pool {{ subnet.name }} family inet dhcp-attributes domain-name {{ subnet.domain_name }}
{% for name_server in subnet.name_servers %}
set routing-instances {{ router }} access address-assignment pool {{ subnet.name }} family inet dhcp-attributes name-server {{ name_server }}
{% endfor %}
set routing-instances {{ router }} access address-assignment pool {{ subnet.name }} family inet dhcp-attributes router {{ subnet.gateway }}
set routing-instances {{ router }} access address-assignment pool {{ subnet.name }} family inet dhcp-attributes maximum-lease-time {{ subnet.lease_time }}
{# configure VLANs for each subnet #}
set routing-instances {{ router }} instance-type virtual-router
set routing-instances {{ router }} interface reth0.{{ subnet.vlan.id }}
set routing-instances {{ router }} routing-options instance-import isp
{# configure DHCP reservations #}
{% for pool in dhcp_reservations %}
{% for host in pool.hosts %}
{% if pool.name == subnet.name %}
set routing-instances {{ router }} access address-assignment pool {{ pool.name }} family inet host {{ host.name }} hardware-address {{ host.mac | upper }} ip-address {{ host.ip }}
{% endif %}
{% endfor %}
{% endfor %}
set routing-instances {{ router }} system services dhcp-local-server group dhcp-{{ subnet.vlan.tag }} interface reth0.{{ subnet.vlan.id }}
set policy-options policy-statement to-{{ router }} term t0 from instance {{ router }}
set policy-options policy-statement to-{{ router }} term t0 then accept
{% endif %}
{% endfor %}
{% endfor %}



{# configure WAN #}
{# this count is used to keep track of term instances #}
{% set count = namespace(value=1) %}
set policy-options policy-statement isp term t0 from preference 1
set policy-options policy-statement isp term t0 then reject
{% if dhcp_wan1 is defined %}
set interfaces reth1 unit 0 family inet address {{ dhcp1_address }}
set interfaces reth1 description primary-isp

set routing-instances primary-vr instance-type virtual-router
set routing-instances primary-vr interface reth1
set routing-instances primary-vr routing-options static route 0.0.0.0/0 next-hop {{ dhcp_wan1_nh }}
set routing-instances primary-vr routing-options instance-import to-lan-trusted

set policy-options policy-statement isp term t{{ count.value }} from instance primary-vr
set policy-options policy-statement isp term t{{ count.value }} then preference 10
set policy-options policy-statement isp term t{{ count.value }} then accept

set security zones security-zone primary-untrusted host-inbound-traffic system-services all
set security zones security-zone primary-untrusted host-inbound-traffic protocols all
set security zones security-zone primary-untrusted interfaces reth1 host-inbound-traffic system-services all
set security zones security-zone primary-untrusted interfaces reth1 host-inbound-traffic protocols all

{% for wan_interface in dhcp_wan1 %}
set interfaces {{ wan_interface }} gigether-options redundant-parent reth1
{% set count.value = count.value +1 %}
{% endfor %}
{% endif %}

{% if dhcp_wan2 is defined %}
set interfaces reth2 unit 0 family inet address {{ dhcp2_address }}
set interfaces reth2 description alternate-isp

set routing-instances alternate-vr instance-type virtual-router
set routing-instances alternate-vr interface reth2
set routing-instances alternate-vr routing-options static route 0.0.0.0/0 next-hop {{ dhcp_wan2_nh }}
set routing-instances alternate-vr routing-options instance-import to-lan-trusted

set policy-options policy-statement isp term t{{ count.value }} from instance alternate-vr
set policy-options policy-statement isp term t{{ count.value }} then preference 20
set policy-options policy-statement isp term t{{ count.value }} then accept

set security zones security-zone alternate-untrusted host-inbound-traffic system-services all
set security zones security-zone alternate-untrusted host-inbound-traffic protocols all
set security zones security-zone alternate-untrusted interfaces reth2 host-inbound-traffic system-services all
set security zones security-zone alternate-untrusted interfaces reth2 host-inbound-traffic protocols all
{% for wan_interface in dhcp_wan2 %}
set interfaces {{ wan_interface }} gigether-options redundant-parent reth2
{% set count.value = count.value +1 %}
{% endfor %}
{% endif %}

{% if pppoe_interface is defined %}
set interfaces {{ pppoe_interface }} unit 0
set interfaces {{ pppoe_interface }} unit 0 ppp-options pap access-profile ppp-profile
set interfaces {{ pppoe_interface }} unit 0 ppp-options pap local-password {{ pppoe_password | password_hash('md5') }}
set interfaces {{ pppoe_interface }} unit 0 ppp-options pap local-name {{ pppoe_username }}
set interfaces {{ pppoe_interface }} unit 0 ppp-options pap passive
set interfaces {{ pppoe_interface }} unit 0 pppoe-options underlying-interface {{ pppoe_physical_interface }}
set interfaces {{ pppoe_interface }} unit 0 pppoe-options auto-reconnect 10
set interfaces {{ pppoe_interface }} unit 0 pppoe-options client
set interfaces {{ pppoe_interface }} unit 0 pppoe-options idle-timeout 0
set interfaces {{ pppoe_interface }} unit 0 family inet negotiate-address
set interfaces {{ pppoe_interface }} unit 0 family inet mtu 1492
{% endif %}

{# Configure WAN failover #}
{% if dhcp_wan2 is defined %}
set routing-options rib-groups to-primary-vr import-rib primary-vr.inet.0
set routing-options rib-groups to-alternate-vr import-rib alternate-vr.inet.0
set routing-options rib-groups to-lan-trusted import-rib lan-trusted.inet.0
set routing-options rib-groups to-lan-trusted import-rib primary-vr.inet.0
set routing-options rib-groups to-lan-trusted import-rib alternate-vr.inet.0

{% for virtual_router in virtual_routers %}
set routing-options rib-groups to-primary-vr import-rib {{virtual_router }}.inet.0
set routing-options rib-groups to-alternate-vr import-rib {{virtual_router }}.inet.0
{% endfor %}

{# Configure source NAT for primary WAN #}
set security nat source rule-set to-primary-isp from zone lan-trusted
set security nat source rule-set to-primary-isp to zone primary-untrusted
set security nat source rule-set to-primary-isp rule p1 match source-address 0.0.0.0/0
set security nat source rule-set to-primary-isp rule p1 match destination-address 0.0.0.0/0
set security nat source rule-set to-primary-isp rule p1 then source-nat interface

{# Configure route monitoring for primary WAN #}
set services rpm probe wan-probe-primary test google probe-type icmp-ping
set services rpm probe wan-probe-primary test google target address 8.8.8.8
set services rpm probe wan-probe-primary test google probe-count 5
set services rpm probe wan-probe-primary test google probe-interval 1
set services rpm probe wan-probe-primary test google test-interval 30
set services rpm probe wan-probe-primary test google thresholds successive-loss 5
set services rpm probe wan-probe-primary test google thresholds total-loss 5
set services rpm probe wan-probe-primary test google next-hop {{ dhcp_wan1_nh }}
set services rpm probe wan-probe-primary test google destination-interface reth1

{# Configure route monitoring for alternate WAN #}
set services rpm probe wan-probe-alternate test google probe-type icmp-ping
set services rpm probe wan-probe-alternate test google target address 8.8.8.8
set services rpm probe wan-probe-alternate test google probe-count 5
set services rpm probe wan-probe-alternate test google probe-interval 1
set services rpm probe wan-probe-alternate test google test-interval 30
set services rpm probe wan-probe-alternate test google thresholds successive-loss 5
set services rpm probe wan-probe-alternate test google thresholds total-loss 5
set services rpm probe wan-probe-alternate test google next-hop {{ dhcp_wan2_nh }}
set services rpm probe wan-probe-alternate test google destination-interface reth2

{# Configure source NAT for alternate WAN #}
set security nat source rule-set to-alternate-isp from zone lan-trusted
set security nat source rule-set to-alternate-isp to zone alternate-untrusted
set security nat source rule-set to-alternate-isp rule a1 match source-address 0.0.0.0/0
set security nat source rule-set to-alternate-isp rule a1 match destination-address 0.0.0.0/0
set security nat source rule-set to-alternate-isp rule a1 then source-nat interface

set services ip-monitoring policy wan-policy-primary match rpm-probe wan-probe-primary
set services ip-monitoring policy wan-policy-primary then preferred-route routing-instances primary-vr route 0.0.0.0/0 next-hop {{ dhcp_wan1_nh}}

set services ip-monitoring policy wan-policy-alternate match rpm-probe wan-probe-alternate
set services ip-monitoring policy wan-policy-alternate then preferred-route routing-instances alternate-vr route 0.0.0.0/0 next-hop {{ dhcp_wan2_nh}}
{% endif %}


{# Configure logging #}
set security log mode stream
set security log format syslog
set security log report

set security policies pre-id-default-policy then log session-close
